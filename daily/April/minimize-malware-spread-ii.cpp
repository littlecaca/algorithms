#include <queue>
#include <vector>

using namespace std;

class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int ans = 0, num = INT_MAX;
        int len = graph.size();
        vector<bool> initial_infected(len);
        for (auto i : initial)
            initial_infected[i] = true;
        queue<int> que;
        for (int i : initial)
        {
            vector<bool> infected = initial_infected;
            for (auto j : initial)
                if (j != i) que.push(j);
            int count = 0;
            while (!que.empty())
            {
                int cnt = que.size();
                count += cnt;
                while (cnt--)
                {
                    auto node = que.front();
                    que.pop();
                    for (int k = 0; k < len; ++k)
                    {
                        if (k != i && graph[node][k] == 1 && !infected[k])
                        {
                            infected[k] = true;
                            que.push(k);
                        }
                    }
                }
            }
            if (count < num || (count == num && i < ans))
            {
                num = count;
                ans = i;
            }
        }
        return ans;
    }
};